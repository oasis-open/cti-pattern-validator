# Generated from STIXPattern.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,54,502,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,1,0,1,0,1,0,1,0,
        5,0,120,8,0,10,0,12,0,123,9,0,3,0,125,8,0,1,1,3,1,128,8,1,1,1,1,
        1,1,1,5,1,133,8,1,10,1,12,1,136,9,1,3,1,138,8,1,1,2,1,2,5,2,142,
        8,2,10,2,12,2,145,9,2,1,2,1,2,4,2,149,8,2,11,2,12,2,150,1,3,3,3,
        154,8,3,1,3,5,3,157,8,3,10,3,12,3,160,9,3,1,3,1,3,4,3,164,8,3,11,
        3,12,3,165,1,4,1,4,1,4,5,4,171,8,4,10,4,12,4,174,9,4,1,4,1,4,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,5,5,185,8,5,10,5,12,5,188,9,5,1,5,1,5,1,
        5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,5,207,
        8,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,5,6,217,8,6,10,6,12,6,220,9,
        6,1,6,1,6,1,7,1,7,3,7,226,8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,3,8,239,8,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,248,8,8,1,
        8,1,8,1,8,1,8,1,8,3,8,255,8,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,
        8,265,8,8,1,8,1,8,4,8,269,8,8,11,8,12,8,270,3,8,273,8,8,1,8,1,8,
        1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,
        1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
        1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,
        1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,
        1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,
        1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,
        1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
        1,27,1,27,1,27,1,27,1,28,1,28,5,28,401,8,28,10,28,12,28,404,9,28,
        1,29,1,29,5,29,408,8,29,10,29,12,29,411,9,29,1,30,1,30,1,30,3,30,
        416,8,30,1,31,1,31,1,31,1,31,3,31,422,8,31,1,32,1,32,1,33,1,33,1,
        33,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,
        39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,
        46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,51,1,
        52,1,52,1,53,4,53,470,8,53,11,53,12,53,471,1,53,1,53,1,54,1,54,1,
        54,1,54,5,54,480,8,54,10,54,12,54,483,9,54,1,54,1,54,1,54,1,54,1,
        54,1,55,1,55,1,55,1,55,5,55,494,8,55,10,55,12,55,497,9,55,1,55,1,
        55,1,56,1,56,1,481,0,57,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
        19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
        41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
        63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,
        85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,0,103,0,105,
        0,107,51,109,52,111,53,113,54,1,0,15,1,0,49,57,1,0,48,57,2,0,39,
        39,92,92,1,0,48,50,1,0,49,50,1,0,48,49,1,0,48,51,1,0,48,53,3,0,65,
        90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,5,0,45,45,48,57,65,
        90,95,95,97,122,3,0,48,57,65,70,97,102,4,0,43,43,47,57,65,90,97,
        122,10,0,9,13,32,32,133,133,160,160,5760,5760,8192,8202,8232,8233,
        8239,8239,8287,8287,12288,12288,2,0,10,10,13,13,530,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
        1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
        1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
        1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
        1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
        1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,107,1,0,0,0,0,109,
        1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,1,115,1,0,0,0,3,127,1,0,0,0,
        5,139,1,0,0,0,7,153,1,0,0,0,9,167,1,0,0,0,11,177,1,0,0,0,13,210,
        1,0,0,0,15,225,1,0,0,0,17,227,1,0,0,0,19,277,1,0,0,0,21,281,1,0,
        0,0,23,284,1,0,0,0,25,288,1,0,0,0,27,299,1,0,0,0,29,304,1,0,0,0,
        31,312,1,0,0,0,33,323,1,0,0,0,35,332,1,0,0,0,37,339,1,0,0,0,39,344,
        1,0,0,0,41,347,1,0,0,0,43,353,1,0,0,0,45,358,1,0,0,0,47,366,1,0,
        0,0,49,371,1,0,0,0,51,377,1,0,0,0,53,384,1,0,0,0,55,392,1,0,0,0,
        57,398,1,0,0,0,59,405,1,0,0,0,61,415,1,0,0,0,63,421,1,0,0,0,65,423,
        1,0,0,0,67,425,1,0,0,0,69,428,1,0,0,0,71,430,1,0,0,0,73,433,1,0,
        0,0,75,435,1,0,0,0,77,437,1,0,0,0,79,439,1,0,0,0,81,441,1,0,0,0,
        83,443,1,0,0,0,85,445,1,0,0,0,87,447,1,0,0,0,89,449,1,0,0,0,91,451,
        1,0,0,0,93,453,1,0,0,0,95,455,1,0,0,0,97,457,1,0,0,0,99,459,1,0,
        0,0,101,461,1,0,0,0,103,463,1,0,0,0,105,466,1,0,0,0,107,469,1,0,
        0,0,109,475,1,0,0,0,111,489,1,0,0,0,113,500,1,0,0,0,115,124,5,45,
        0,0,116,125,5,48,0,0,117,121,7,0,0,0,118,120,7,1,0,0,119,118,1,0,
        0,0,120,123,1,0,0,0,121,119,1,0,0,0,121,122,1,0,0,0,122,125,1,0,
        0,0,123,121,1,0,0,0,124,116,1,0,0,0,124,117,1,0,0,0,125,2,1,0,0,
        0,126,128,5,43,0,0,127,126,1,0,0,0,127,128,1,0,0,0,128,137,1,0,0,
        0,129,138,5,48,0,0,130,134,7,0,0,0,131,133,7,1,0,0,132,131,1,0,0,
        0,133,136,1,0,0,0,134,132,1,0,0,0,134,135,1,0,0,0,135,138,1,0,0,
        0,136,134,1,0,0,0,137,129,1,0,0,0,137,130,1,0,0,0,138,4,1,0,0,0,
        139,143,5,45,0,0,140,142,7,1,0,0,141,140,1,0,0,0,142,145,1,0,0,0,
        143,141,1,0,0,0,143,144,1,0,0,0,144,146,1,0,0,0,145,143,1,0,0,0,
        146,148,5,46,0,0,147,149,7,1,0,0,148,147,1,0,0,0,149,150,1,0,0,0,
        150,148,1,0,0,0,150,151,1,0,0,0,151,6,1,0,0,0,152,154,5,43,0,0,153,
        152,1,0,0,0,153,154,1,0,0,0,154,158,1,0,0,0,155,157,7,1,0,0,156,
        155,1,0,0,0,157,160,1,0,0,0,158,156,1,0,0,0,158,159,1,0,0,0,159,
        161,1,0,0,0,160,158,1,0,0,0,161,163,5,46,0,0,162,164,7,1,0,0,163,
        162,1,0,0,0,164,165,1,0,0,0,165,163,1,0,0,0,165,166,1,0,0,0,166,
        8,1,0,0,0,167,168,5,104,0,0,168,172,3,73,36,0,169,171,3,103,51,0,
        170,169,1,0,0,0,171,174,1,0,0,0,172,170,1,0,0,0,172,173,1,0,0,0,
        173,175,1,0,0,0,174,172,1,0,0,0,175,176,3,73,36,0,176,10,1,0,0,0,
        177,178,5,98,0,0,178,186,3,73,36,0,179,180,3,105,52,0,180,181,3,
        105,52,0,181,182,3,105,52,0,182,183,3,105,52,0,183,185,1,0,0,0,184,
        179,1,0,0,0,185,188,1,0,0,0,186,184,1,0,0,0,186,187,1,0,0,0,187,
        206,1,0,0,0,188,186,1,0,0,0,189,190,3,105,52,0,190,191,3,105,52,
        0,191,192,3,105,52,0,192,193,3,105,52,0,193,207,1,0,0,0,194,195,
        3,105,52,0,195,196,3,105,52,0,196,197,3,105,52,0,197,198,1,0,0,0,
        198,199,5,61,0,0,199,207,1,0,0,0,200,201,3,105,52,0,201,202,3,105,
        52,0,202,203,1,0,0,0,203,204,5,61,0,0,204,205,5,61,0,0,205,207,1,
        0,0,0,206,189,1,0,0,0,206,194,1,0,0,0,206,200,1,0,0,0,207,208,1,
        0,0,0,208,209,3,73,36,0,209,12,1,0,0,0,210,218,3,73,36,0,211,217,
        8,2,0,0,212,213,5,92,0,0,213,217,5,39,0,0,214,215,5,92,0,0,215,217,
        5,92,0,0,216,211,1,0,0,0,216,212,1,0,0,0,216,214,1,0,0,0,217,220,
        1,0,0,0,218,216,1,0,0,0,218,219,1,0,0,0,219,221,1,0,0,0,220,218,
        1,0,0,0,221,222,3,73,36,0,222,14,1,0,0,0,223,226,3,47,23,0,224,226,
        3,49,24,0,225,223,1,0,0,0,225,224,1,0,0,0,226,16,1,0,0,0,227,228,
        5,116,0,0,228,229,3,73,36,0,229,230,7,1,0,0,230,231,7,1,0,0,231,
        232,7,1,0,0,232,233,7,1,0,0,233,238,3,91,45,0,234,235,5,48,0,0,235,
        239,7,0,0,0,236,237,5,49,0,0,237,239,7,3,0,0,238,234,1,0,0,0,238,
        236,1,0,0,0,239,240,1,0,0,0,240,247,3,91,45,0,241,242,5,48,0,0,242,
        248,7,0,0,0,243,244,7,4,0,0,244,248,7,1,0,0,245,246,5,51,0,0,246,
        248,7,5,0,0,247,241,1,0,0,0,247,243,1,0,0,0,247,245,1,0,0,0,248,
        249,1,0,0,0,249,254,5,84,0,0,250,251,7,5,0,0,251,255,7,1,0,0,252,
        253,5,50,0,0,253,255,7,6,0,0,254,250,1,0,0,0,254,252,1,0,0,0,255,
        256,1,0,0,0,256,257,3,75,37,0,257,258,7,7,0,0,258,259,7,1,0,0,259,
        264,3,75,37,0,260,261,7,7,0,0,261,265,7,1,0,0,262,263,5,54,0,0,263,
        265,5,48,0,0,264,260,1,0,0,0,264,262,1,0,0,0,265,272,1,0,0,0,266,
        268,3,77,38,0,267,269,7,1,0,0,268,267,1,0,0,0,269,270,1,0,0,0,270,
        268,1,0,0,0,270,271,1,0,0,0,271,273,1,0,0,0,272,266,1,0,0,0,272,
        273,1,0,0,0,273,274,1,0,0,0,274,275,5,90,0,0,275,276,3,73,36,0,276,
        18,1,0,0,0,277,278,5,65,0,0,278,279,5,78,0,0,279,280,5,68,0,0,280,
        20,1,0,0,0,281,282,5,79,0,0,282,283,5,82,0,0,283,22,1,0,0,0,284,
        285,5,78,0,0,285,286,5,79,0,0,286,287,5,84,0,0,287,24,1,0,0,0,288,
        289,5,70,0,0,289,290,5,79,0,0,290,291,5,76,0,0,291,292,5,76,0,0,
        292,293,5,79,0,0,293,294,5,87,0,0,294,295,5,69,0,0,295,296,5,68,
        0,0,296,297,5,66,0,0,297,298,5,89,0,0,298,26,1,0,0,0,299,300,5,76,
        0,0,300,301,5,73,0,0,301,302,5,75,0,0,302,303,5,69,0,0,303,28,1,
        0,0,0,304,305,5,77,0,0,305,306,5,65,0,0,306,307,5,84,0,0,307,308,
        5,67,0,0,308,309,5,72,0,0,309,310,5,69,0,0,310,311,5,83,0,0,311,
        30,1,0,0,0,312,313,5,73,0,0,313,314,5,83,0,0,314,315,5,83,0,0,315,
        316,5,85,0,0,316,317,5,80,0,0,317,318,5,69,0,0,318,319,5,82,0,0,
        319,320,5,83,0,0,320,321,5,69,0,0,321,322,5,84,0,0,322,32,1,0,0,
        0,323,324,5,73,0,0,324,325,5,83,0,0,325,326,5,83,0,0,326,327,5,85,
        0,0,327,328,5,66,0,0,328,329,5,83,0,0,329,330,5,69,0,0,330,331,5,
        84,0,0,331,34,1,0,0,0,332,333,5,69,0,0,333,334,5,88,0,0,334,335,
        5,73,0,0,335,336,5,83,0,0,336,337,5,84,0,0,337,338,5,83,0,0,338,
        36,1,0,0,0,339,340,5,76,0,0,340,341,5,65,0,0,341,342,5,83,0,0,342,
        343,5,84,0,0,343,38,1,0,0,0,344,345,5,73,0,0,345,346,5,78,0,0,346,
        40,1,0,0,0,347,348,5,83,0,0,348,349,5,84,0,0,349,350,5,65,0,0,350,
        351,5,82,0,0,351,352,5,84,0,0,352,42,1,0,0,0,353,354,5,83,0,0,354,
        355,5,84,0,0,355,356,5,79,0,0,356,357,5,80,0,0,357,44,1,0,0,0,358,
        359,5,83,0,0,359,360,5,69,0,0,360,361,5,67,0,0,361,362,5,79,0,0,
        362,363,5,78,0,0,363,364,5,68,0,0,364,365,5,83,0,0,365,46,1,0,0,
        0,366,367,5,116,0,0,367,368,5,114,0,0,368,369,5,117,0,0,369,370,
        5,101,0,0,370,48,1,0,0,0,371,372,5,102,0,0,372,373,5,97,0,0,373,
        374,5,108,0,0,374,375,5,115,0,0,375,376,5,101,0,0,376,50,1,0,0,0,
        377,378,5,87,0,0,378,379,5,73,0,0,379,380,5,84,0,0,380,381,5,72,
        0,0,381,382,5,73,0,0,382,383,5,78,0,0,383,52,1,0,0,0,384,385,5,82,
        0,0,385,386,5,69,0,0,386,387,5,80,0,0,387,388,5,69,0,0,388,389,5,
        65,0,0,389,390,5,84,0,0,390,391,5,83,0,0,391,54,1,0,0,0,392,393,
        5,84,0,0,393,394,5,73,0,0,394,395,5,77,0,0,395,396,5,69,0,0,396,
        397,5,83,0,0,397,56,1,0,0,0,398,402,7,8,0,0,399,401,7,9,0,0,400,
        399,1,0,0,0,401,404,1,0,0,0,402,400,1,0,0,0,402,403,1,0,0,0,403,
        58,1,0,0,0,404,402,1,0,0,0,405,409,7,8,0,0,406,408,7,10,0,0,407,
        406,1,0,0,0,408,411,1,0,0,0,409,407,1,0,0,0,409,410,1,0,0,0,410,
        60,1,0,0,0,411,409,1,0,0,0,412,416,5,61,0,0,413,414,5,61,0,0,414,
        416,5,61,0,0,415,412,1,0,0,0,415,413,1,0,0,0,416,62,1,0,0,0,417,
        418,5,33,0,0,418,422,5,61,0,0,419,420,5,60,0,0,420,422,5,62,0,0,
        421,417,1,0,0,0,421,419,1,0,0,0,422,64,1,0,0,0,423,424,5,60,0,0,
        424,66,1,0,0,0,425,426,5,60,0,0,426,427,5,61,0,0,427,68,1,0,0,0,
        428,429,5,62,0,0,429,70,1,0,0,0,430,431,5,62,0,0,431,432,5,61,0,
        0,432,72,1,0,0,0,433,434,5,39,0,0,434,74,1,0,0,0,435,436,5,58,0,
        0,436,76,1,0,0,0,437,438,5,46,0,0,438,78,1,0,0,0,439,440,5,44,0,
        0,440,80,1,0,0,0,441,442,5,41,0,0,442,82,1,0,0,0,443,444,5,40,0,
        0,444,84,1,0,0,0,445,446,5,93,0,0,446,86,1,0,0,0,447,448,5,91,0,
        0,448,88,1,0,0,0,449,450,5,43,0,0,450,90,1,0,0,0,451,452,3,93,46,
        0,452,92,1,0,0,0,453,454,5,45,0,0,454,94,1,0,0,0,455,456,5,94,0,
        0,456,96,1,0,0,0,457,458,5,47,0,0,458,98,1,0,0,0,459,460,5,42,0,
        0,460,100,1,0,0,0,461,462,7,11,0,0,462,102,1,0,0,0,463,464,3,101,
        50,0,464,465,3,101,50,0,465,104,1,0,0,0,466,467,7,12,0,0,467,106,
        1,0,0,0,468,470,7,13,0,0,469,468,1,0,0,0,470,471,1,0,0,0,471,469,
        1,0,0,0,471,472,1,0,0,0,472,473,1,0,0,0,473,474,6,53,0,0,474,108,
        1,0,0,0,475,476,5,47,0,0,476,477,5,42,0,0,477,481,1,0,0,0,478,480,
        9,0,0,0,479,478,1,0,0,0,480,483,1,0,0,0,481,482,1,0,0,0,481,479,
        1,0,0,0,482,484,1,0,0,0,483,481,1,0,0,0,484,485,5,42,0,0,485,486,
        5,47,0,0,486,487,1,0,0,0,487,488,6,54,0,0,488,110,1,0,0,0,489,490,
        5,47,0,0,490,491,5,47,0,0,491,495,1,0,0,0,492,494,8,14,0,0,493,492,
        1,0,0,0,494,497,1,0,0,0,495,493,1,0,0,0,495,496,1,0,0,0,496,498,
        1,0,0,0,497,495,1,0,0,0,498,499,6,55,0,0,499,112,1,0,0,0,500,501,
        9,0,0,0,501,114,1,0,0,0,30,0,121,124,127,134,137,143,150,153,158,
        165,172,186,206,216,218,225,238,247,254,264,270,272,402,409,415,
        421,471,481,495,1,6,0,0
    ]

class STIXPatternLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    IntNegLiteral = 1
    IntPosLiteral = 2
    FloatNegLiteral = 3
    FloatPosLiteral = 4
    HexLiteral = 5
    BinaryLiteral = 6
    StringLiteral = 7
    BoolLiteral = 8
    TimestampLiteral = 9
    AND = 10
    OR = 11
    NOT = 12
    FOLLOWEDBY = 13
    LIKE = 14
    MATCHES = 15
    ISSUPERSET = 16
    ISSUBSET = 17
    EXISTS = 18
    LAST = 19
    IN = 20
    START = 21
    STOP = 22
    SECONDS = 23
    TRUE = 24
    FALSE = 25
    WITHIN = 26
    REPEATS = 27
    TIMES = 28
    IdentifierWithoutHyphen = 29
    IdentifierWithHyphen = 30
    EQ = 31
    NEQ = 32
    LT = 33
    LE = 34
    GT = 35
    GE = 36
    QUOTE = 37
    COLON = 38
    DOT = 39
    COMMA = 40
    RPAREN = 41
    LPAREN = 42
    RBRACK = 43
    LBRACK = 44
    PLUS = 45
    HYPHEN = 46
    MINUS = 47
    POWER_OP = 48
    DIVIDE = 49
    ASTERISK = 50
    WS = 51
    COMMENT = 52
    LINE_COMMENT = 53
    InvalidCharacter = 54

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'AND'", "'OR'", "'NOT'", "'FOLLOWEDBY'", "'LIKE'", "'MATCHES'", 
            "'ISSUPERSET'", "'ISSUBSET'", "'EXISTS'", "'LAST'", "'IN'", 
            "'START'", "'STOP'", "'SECONDS'", "'true'", "'false'", "'WITHIN'", 
            "'REPEATS'", "'TIMES'", "'<'", "'<='", "'>'", "'>='", "'''", 
            "':'", "'.'", "','", "')'", "'('", "']'", "'['", "'+'", "'-'", 
            "'^'", "'/'", "'*'" ]

    symbolicNames = [ "<INVALID>",
            "IntNegLiteral", "IntPosLiteral", "FloatNegLiteral", "FloatPosLiteral", 
            "HexLiteral", "BinaryLiteral", "StringLiteral", "BoolLiteral", 
            "TimestampLiteral", "AND", "OR", "NOT", "FOLLOWEDBY", "LIKE", 
            "MATCHES", "ISSUPERSET", "ISSUBSET", "EXISTS", "LAST", "IN", 
            "START", "STOP", "SECONDS", "TRUE", "FALSE", "WITHIN", "REPEATS", 
            "TIMES", "IdentifierWithoutHyphen", "IdentifierWithHyphen", 
            "EQ", "NEQ", "LT", "LE", "GT", "GE", "QUOTE", "COLON", "DOT", 
            "COMMA", "RPAREN", "LPAREN", "RBRACK", "LBRACK", "PLUS", "HYPHEN", 
            "MINUS", "POWER_OP", "DIVIDE", "ASTERISK", "WS", "COMMENT", 
            "LINE_COMMENT", "InvalidCharacter" ]

    ruleNames = [ "IntNegLiteral", "IntPosLiteral", "FloatNegLiteral", "FloatPosLiteral", 
                  "HexLiteral", "BinaryLiteral", "StringLiteral", "BoolLiteral", 
                  "TimestampLiteral", "AND", "OR", "NOT", "FOLLOWEDBY", 
                  "LIKE", "MATCHES", "ISSUPERSET", "ISSUBSET", "EXISTS", 
                  "LAST", "IN", "START", "STOP", "SECONDS", "TRUE", "FALSE", 
                  "WITHIN", "REPEATS", "TIMES", "IdentifierWithoutHyphen", 
                  "IdentifierWithHyphen", "EQ", "NEQ", "LT", "LE", "GT", 
                  "GE", "QUOTE", "COLON", "DOT", "COMMA", "RPAREN", "LPAREN", 
                  "RBRACK", "LBRACK", "PLUS", "HYPHEN", "MINUS", "POWER_OP", 
                  "DIVIDE", "ASTERISK", "HexDigit", "TwoHexDigits", "Base64Char", 
                  "WS", "COMMENT", "LINE_COMMENT", "InvalidCharacter" ]

    grammarFileName = "STIXPattern.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


