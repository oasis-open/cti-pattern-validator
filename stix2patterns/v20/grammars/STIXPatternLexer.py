# Generated from STIXPattern.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,53,493,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,1,0,1,0,1,0,1,0,5,0,118,8,
        0,10,0,12,0,121,9,0,3,0,123,8,0,1,1,3,1,126,8,1,1,1,1,1,1,1,5,1,
        131,8,1,10,1,12,1,134,9,1,3,1,136,8,1,1,2,1,2,5,2,140,8,2,10,2,12,
        2,143,9,2,1,2,1,2,4,2,147,8,2,11,2,12,2,148,1,3,3,3,152,8,3,1,3,
        5,3,155,8,3,10,3,12,3,158,9,3,1,3,1,3,4,3,162,8,3,11,3,12,3,163,
        1,4,1,4,1,4,5,4,169,8,4,10,4,12,4,172,9,4,1,4,1,4,1,5,1,5,1,5,1,
        5,1,5,1,5,1,5,5,5,183,8,5,10,5,12,5,186,9,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,5,205,8,5,1,5,
        1,5,1,6,1,6,1,6,1,6,1,6,1,6,5,6,215,8,6,10,6,12,6,218,9,6,1,6,1,
        6,1,7,1,7,3,7,224,8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,3,8,237,8,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,246,8,8,1,8,1,8,1,
        8,1,8,1,8,3,8,253,8,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,263,8,
        8,1,8,1,8,4,8,267,8,8,11,8,12,8,268,3,8,271,8,8,1,8,1,8,1,8,1,9,
        1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,
        12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,
        14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
        16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,
        19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,
        21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,
        23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,
        25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,5,27,392,8,
        27,10,27,12,27,395,9,27,1,28,1,28,5,28,399,8,28,10,28,12,28,402,
        9,28,1,29,1,29,1,29,3,29,407,8,29,1,30,1,30,1,30,1,30,3,30,413,8,
        30,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,
        36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,
        42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,
        49,1,49,1,50,1,50,1,50,1,51,1,51,1,52,4,52,461,8,52,11,52,12,52,
        462,1,52,1,52,1,53,1,53,1,53,1,53,5,53,471,8,53,10,53,12,53,474,
        9,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,5,54,485,8,54,
        10,54,12,54,488,9,54,1,54,1,54,1,55,1,55,1,472,0,56,1,1,3,2,5,3,
        7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
        53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,
        75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,
        97,49,99,0,101,0,103,0,105,50,107,51,109,52,111,53,1,0,15,1,0,49,
        57,1,0,48,57,2,0,39,39,92,92,1,0,48,50,1,0,49,50,1,0,48,49,1,0,48,
        51,1,0,48,53,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,
        5,0,45,45,48,57,65,90,95,95,97,122,3,0,48,57,65,70,97,102,4,0,43,
        43,47,57,65,90,97,122,10,0,9,13,32,32,133,133,160,160,5760,5760,
        8192,8202,8232,8233,8239,8239,8287,8287,12288,12288,2,0,10,10,13,
        13,521,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
        0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
        0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
        0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
        0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
        0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,
        0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,
        0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,105,1,0,
        0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,1,113,1,0,0,0,3,125,
        1,0,0,0,5,137,1,0,0,0,7,151,1,0,0,0,9,165,1,0,0,0,11,175,1,0,0,0,
        13,208,1,0,0,0,15,223,1,0,0,0,17,225,1,0,0,0,19,275,1,0,0,0,21,279,
        1,0,0,0,23,282,1,0,0,0,25,286,1,0,0,0,27,297,1,0,0,0,29,302,1,0,
        0,0,31,310,1,0,0,0,33,321,1,0,0,0,35,330,1,0,0,0,37,335,1,0,0,0,
        39,338,1,0,0,0,41,344,1,0,0,0,43,349,1,0,0,0,45,357,1,0,0,0,47,362,
        1,0,0,0,49,368,1,0,0,0,51,375,1,0,0,0,53,383,1,0,0,0,55,389,1,0,
        0,0,57,396,1,0,0,0,59,406,1,0,0,0,61,412,1,0,0,0,63,414,1,0,0,0,
        65,416,1,0,0,0,67,419,1,0,0,0,69,421,1,0,0,0,71,424,1,0,0,0,73,426,
        1,0,0,0,75,428,1,0,0,0,77,430,1,0,0,0,79,432,1,0,0,0,81,434,1,0,
        0,0,83,436,1,0,0,0,85,438,1,0,0,0,87,440,1,0,0,0,89,442,1,0,0,0,
        91,444,1,0,0,0,93,446,1,0,0,0,95,448,1,0,0,0,97,450,1,0,0,0,99,452,
        1,0,0,0,101,454,1,0,0,0,103,457,1,0,0,0,105,460,1,0,0,0,107,466,
        1,0,0,0,109,480,1,0,0,0,111,491,1,0,0,0,113,122,5,45,0,0,114,123,
        5,48,0,0,115,119,7,0,0,0,116,118,7,1,0,0,117,116,1,0,0,0,118,121,
        1,0,0,0,119,117,1,0,0,0,119,120,1,0,0,0,120,123,1,0,0,0,121,119,
        1,0,0,0,122,114,1,0,0,0,122,115,1,0,0,0,123,2,1,0,0,0,124,126,5,
        43,0,0,125,124,1,0,0,0,125,126,1,0,0,0,126,135,1,0,0,0,127,136,5,
        48,0,0,128,132,7,0,0,0,129,131,7,1,0,0,130,129,1,0,0,0,131,134,1,
        0,0,0,132,130,1,0,0,0,132,133,1,0,0,0,133,136,1,0,0,0,134,132,1,
        0,0,0,135,127,1,0,0,0,135,128,1,0,0,0,136,4,1,0,0,0,137,141,5,45,
        0,0,138,140,7,1,0,0,139,138,1,0,0,0,140,143,1,0,0,0,141,139,1,0,
        0,0,141,142,1,0,0,0,142,144,1,0,0,0,143,141,1,0,0,0,144,146,5,46,
        0,0,145,147,7,1,0,0,146,145,1,0,0,0,147,148,1,0,0,0,148,146,1,0,
        0,0,148,149,1,0,0,0,149,6,1,0,0,0,150,152,5,43,0,0,151,150,1,0,0,
        0,151,152,1,0,0,0,152,156,1,0,0,0,153,155,7,1,0,0,154,153,1,0,0,
        0,155,158,1,0,0,0,156,154,1,0,0,0,156,157,1,0,0,0,157,159,1,0,0,
        0,158,156,1,0,0,0,159,161,5,46,0,0,160,162,7,1,0,0,161,160,1,0,0,
        0,162,163,1,0,0,0,163,161,1,0,0,0,163,164,1,0,0,0,164,8,1,0,0,0,
        165,166,5,104,0,0,166,170,3,71,35,0,167,169,3,101,50,0,168,167,1,
        0,0,0,169,172,1,0,0,0,170,168,1,0,0,0,170,171,1,0,0,0,171,173,1,
        0,0,0,172,170,1,0,0,0,173,174,3,71,35,0,174,10,1,0,0,0,175,176,5,
        98,0,0,176,184,3,71,35,0,177,178,3,103,51,0,178,179,3,103,51,0,179,
        180,3,103,51,0,180,181,3,103,51,0,181,183,1,0,0,0,182,177,1,0,0,
        0,183,186,1,0,0,0,184,182,1,0,0,0,184,185,1,0,0,0,185,204,1,0,0,
        0,186,184,1,0,0,0,187,188,3,103,51,0,188,189,3,103,51,0,189,190,
        3,103,51,0,190,191,3,103,51,0,191,205,1,0,0,0,192,193,3,103,51,0,
        193,194,3,103,51,0,194,195,3,103,51,0,195,196,1,0,0,0,196,197,5,
        61,0,0,197,205,1,0,0,0,198,199,3,103,51,0,199,200,3,103,51,0,200,
        201,1,0,0,0,201,202,5,61,0,0,202,203,5,61,0,0,203,205,1,0,0,0,204,
        187,1,0,0,0,204,192,1,0,0,0,204,198,1,0,0,0,205,206,1,0,0,0,206,
        207,3,71,35,0,207,12,1,0,0,0,208,216,3,71,35,0,209,215,8,2,0,0,210,
        211,5,92,0,0,211,215,5,39,0,0,212,213,5,92,0,0,213,215,5,92,0,0,
        214,209,1,0,0,0,214,210,1,0,0,0,214,212,1,0,0,0,215,218,1,0,0,0,
        216,214,1,0,0,0,216,217,1,0,0,0,217,219,1,0,0,0,218,216,1,0,0,0,
        219,220,3,71,35,0,220,14,1,0,0,0,221,224,3,45,22,0,222,224,3,47,
        23,0,223,221,1,0,0,0,223,222,1,0,0,0,224,16,1,0,0,0,225,226,5,116,
        0,0,226,227,3,71,35,0,227,228,7,1,0,0,228,229,7,1,0,0,229,230,7,
        1,0,0,230,231,7,1,0,0,231,236,3,89,44,0,232,233,5,48,0,0,233,237,
        7,0,0,0,234,235,5,49,0,0,235,237,7,3,0,0,236,232,1,0,0,0,236,234,
        1,0,0,0,237,238,1,0,0,0,238,245,3,89,44,0,239,240,5,48,0,0,240,246,
        7,0,0,0,241,242,7,4,0,0,242,246,7,1,0,0,243,244,5,51,0,0,244,246,
        7,5,0,0,245,239,1,0,0,0,245,241,1,0,0,0,245,243,1,0,0,0,246,247,
        1,0,0,0,247,252,5,84,0,0,248,249,7,5,0,0,249,253,7,1,0,0,250,251,
        5,50,0,0,251,253,7,6,0,0,252,248,1,0,0,0,252,250,1,0,0,0,253,254,
        1,0,0,0,254,255,3,73,36,0,255,256,7,7,0,0,256,257,7,1,0,0,257,262,
        3,73,36,0,258,259,7,7,0,0,259,263,7,1,0,0,260,261,5,54,0,0,261,263,
        5,48,0,0,262,258,1,0,0,0,262,260,1,0,0,0,263,270,1,0,0,0,264,266,
        3,75,37,0,265,267,7,1,0,0,266,265,1,0,0,0,267,268,1,0,0,0,268,266,
        1,0,0,0,268,269,1,0,0,0,269,271,1,0,0,0,270,264,1,0,0,0,270,271,
        1,0,0,0,271,272,1,0,0,0,272,273,5,90,0,0,273,274,3,71,35,0,274,18,
        1,0,0,0,275,276,5,65,0,0,276,277,5,78,0,0,277,278,5,68,0,0,278,20,
        1,0,0,0,279,280,5,79,0,0,280,281,5,82,0,0,281,22,1,0,0,0,282,283,
        5,78,0,0,283,284,5,79,0,0,284,285,5,84,0,0,285,24,1,0,0,0,286,287,
        5,70,0,0,287,288,5,79,0,0,288,289,5,76,0,0,289,290,5,76,0,0,290,
        291,5,79,0,0,291,292,5,87,0,0,292,293,5,69,0,0,293,294,5,68,0,0,
        294,295,5,66,0,0,295,296,5,89,0,0,296,26,1,0,0,0,297,298,5,76,0,
        0,298,299,5,73,0,0,299,300,5,75,0,0,300,301,5,69,0,0,301,28,1,0,
        0,0,302,303,5,77,0,0,303,304,5,65,0,0,304,305,5,84,0,0,305,306,5,
        67,0,0,306,307,5,72,0,0,307,308,5,69,0,0,308,309,5,83,0,0,309,30,
        1,0,0,0,310,311,5,73,0,0,311,312,5,83,0,0,312,313,5,83,0,0,313,314,
        5,85,0,0,314,315,5,80,0,0,315,316,5,69,0,0,316,317,5,82,0,0,317,
        318,5,83,0,0,318,319,5,69,0,0,319,320,5,84,0,0,320,32,1,0,0,0,321,
        322,5,73,0,0,322,323,5,83,0,0,323,324,5,83,0,0,324,325,5,85,0,0,
        325,326,5,66,0,0,326,327,5,83,0,0,327,328,5,69,0,0,328,329,5,84,
        0,0,329,34,1,0,0,0,330,331,5,76,0,0,331,332,5,65,0,0,332,333,5,83,
        0,0,333,334,5,84,0,0,334,36,1,0,0,0,335,336,5,73,0,0,336,337,5,78,
        0,0,337,38,1,0,0,0,338,339,5,83,0,0,339,340,5,84,0,0,340,341,5,65,
        0,0,341,342,5,82,0,0,342,343,5,84,0,0,343,40,1,0,0,0,344,345,5,83,
        0,0,345,346,5,84,0,0,346,347,5,79,0,0,347,348,5,80,0,0,348,42,1,
        0,0,0,349,350,5,83,0,0,350,351,5,69,0,0,351,352,5,67,0,0,352,353,
        5,79,0,0,353,354,5,78,0,0,354,355,5,68,0,0,355,356,5,83,0,0,356,
        44,1,0,0,0,357,358,5,116,0,0,358,359,5,114,0,0,359,360,5,117,0,0,
        360,361,5,101,0,0,361,46,1,0,0,0,362,363,5,102,0,0,363,364,5,97,
        0,0,364,365,5,108,0,0,365,366,5,115,0,0,366,367,5,101,0,0,367,48,
        1,0,0,0,368,369,5,87,0,0,369,370,5,73,0,0,370,371,5,84,0,0,371,372,
        5,72,0,0,372,373,5,73,0,0,373,374,5,78,0,0,374,50,1,0,0,0,375,376,
        5,82,0,0,376,377,5,69,0,0,377,378,5,80,0,0,378,379,5,69,0,0,379,
        380,5,65,0,0,380,381,5,84,0,0,381,382,5,83,0,0,382,52,1,0,0,0,383,
        384,5,84,0,0,384,385,5,73,0,0,385,386,5,77,0,0,386,387,5,69,0,0,
        387,388,5,83,0,0,388,54,1,0,0,0,389,393,7,8,0,0,390,392,7,9,0,0,
        391,390,1,0,0,0,392,395,1,0,0,0,393,391,1,0,0,0,393,394,1,0,0,0,
        394,56,1,0,0,0,395,393,1,0,0,0,396,400,7,8,0,0,397,399,7,10,0,0,
        398,397,1,0,0,0,399,402,1,0,0,0,400,398,1,0,0,0,400,401,1,0,0,0,
        401,58,1,0,0,0,402,400,1,0,0,0,403,407,5,61,0,0,404,405,5,61,0,0,
        405,407,5,61,0,0,406,403,1,0,0,0,406,404,1,0,0,0,407,60,1,0,0,0,
        408,409,5,33,0,0,409,413,5,61,0,0,410,411,5,60,0,0,411,413,5,62,
        0,0,412,408,1,0,0,0,412,410,1,0,0,0,413,62,1,0,0,0,414,415,5,60,
        0,0,415,64,1,0,0,0,416,417,5,60,0,0,417,418,5,61,0,0,418,66,1,0,
        0,0,419,420,5,62,0,0,420,68,1,0,0,0,421,422,5,62,0,0,422,423,5,61,
        0,0,423,70,1,0,0,0,424,425,5,39,0,0,425,72,1,0,0,0,426,427,5,58,
        0,0,427,74,1,0,0,0,428,429,5,46,0,0,429,76,1,0,0,0,430,431,5,44,
        0,0,431,78,1,0,0,0,432,433,5,41,0,0,433,80,1,0,0,0,434,435,5,40,
        0,0,435,82,1,0,0,0,436,437,5,93,0,0,437,84,1,0,0,0,438,439,5,91,
        0,0,439,86,1,0,0,0,440,441,5,43,0,0,441,88,1,0,0,0,442,443,3,91,
        45,0,443,90,1,0,0,0,444,445,5,45,0,0,445,92,1,0,0,0,446,447,5,94,
        0,0,447,94,1,0,0,0,448,449,5,47,0,0,449,96,1,0,0,0,450,451,5,42,
        0,0,451,98,1,0,0,0,452,453,7,11,0,0,453,100,1,0,0,0,454,455,3,99,
        49,0,455,456,3,99,49,0,456,102,1,0,0,0,457,458,7,12,0,0,458,104,
        1,0,0,0,459,461,7,13,0,0,460,459,1,0,0,0,461,462,1,0,0,0,462,460,
        1,0,0,0,462,463,1,0,0,0,463,464,1,0,0,0,464,465,6,52,0,0,465,106,
        1,0,0,0,466,467,5,47,0,0,467,468,5,42,0,0,468,472,1,0,0,0,469,471,
        9,0,0,0,470,469,1,0,0,0,471,474,1,0,0,0,472,473,1,0,0,0,472,470,
        1,0,0,0,473,475,1,0,0,0,474,472,1,0,0,0,475,476,5,42,0,0,476,477,
        5,47,0,0,477,478,1,0,0,0,478,479,6,53,0,0,479,108,1,0,0,0,480,481,
        5,47,0,0,481,482,5,47,0,0,482,486,1,0,0,0,483,485,8,14,0,0,484,483,
        1,0,0,0,485,488,1,0,0,0,486,484,1,0,0,0,486,487,1,0,0,0,487,489,
        1,0,0,0,488,486,1,0,0,0,489,490,6,54,0,0,490,110,1,0,0,0,491,492,
        9,0,0,0,492,112,1,0,0,0,30,0,119,122,125,132,135,141,148,151,156,
        163,170,184,204,214,216,223,236,245,252,262,268,270,393,400,406,
        412,462,472,486,1,6,0,0
    ]

class STIXPatternLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    IntNegLiteral = 1
    IntPosLiteral = 2
    FloatNegLiteral = 3
    FloatPosLiteral = 4
    HexLiteral = 5
    BinaryLiteral = 6
    StringLiteral = 7
    BoolLiteral = 8
    TimestampLiteral = 9
    AND = 10
    OR = 11
    NOT = 12
    FOLLOWEDBY = 13
    LIKE = 14
    MATCHES = 15
    ISSUPERSET = 16
    ISSUBSET = 17
    LAST = 18
    IN = 19
    START = 20
    STOP = 21
    SECONDS = 22
    TRUE = 23
    FALSE = 24
    WITHIN = 25
    REPEATS = 26
    TIMES = 27
    IdentifierWithoutHyphen = 28
    IdentifierWithHyphen = 29
    EQ = 30
    NEQ = 31
    LT = 32
    LE = 33
    GT = 34
    GE = 35
    QUOTE = 36
    COLON = 37
    DOT = 38
    COMMA = 39
    RPAREN = 40
    LPAREN = 41
    RBRACK = 42
    LBRACK = 43
    PLUS = 44
    HYPHEN = 45
    MINUS = 46
    POWER_OP = 47
    DIVIDE = 48
    ASTERISK = 49
    WS = 50
    COMMENT = 51
    LINE_COMMENT = 52
    InvalidCharacter = 53

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'AND'", "'OR'", "'NOT'", "'FOLLOWEDBY'", "'LIKE'", "'MATCHES'", 
            "'ISSUPERSET'", "'ISSUBSET'", "'LAST'", "'IN'", "'START'", "'STOP'", 
            "'SECONDS'", "'true'", "'false'", "'WITHIN'", "'REPEATS'", "'TIMES'", 
            "'<'", "'<='", "'>'", "'>='", "'''", "':'", "'.'", "','", "')'", 
            "'('", "']'", "'['", "'+'", "'-'", "'^'", "'/'", "'*'" ]

    symbolicNames = [ "<INVALID>",
            "IntNegLiteral", "IntPosLiteral", "FloatNegLiteral", "FloatPosLiteral", 
            "HexLiteral", "BinaryLiteral", "StringLiteral", "BoolLiteral", 
            "TimestampLiteral", "AND", "OR", "NOT", "FOLLOWEDBY", "LIKE", 
            "MATCHES", "ISSUPERSET", "ISSUBSET", "LAST", "IN", "START", 
            "STOP", "SECONDS", "TRUE", "FALSE", "WITHIN", "REPEATS", "TIMES", 
            "IdentifierWithoutHyphen", "IdentifierWithHyphen", "EQ", "NEQ", 
            "LT", "LE", "GT", "GE", "QUOTE", "COLON", "DOT", "COMMA", "RPAREN", 
            "LPAREN", "RBRACK", "LBRACK", "PLUS", "HYPHEN", "MINUS", "POWER_OP", 
            "DIVIDE", "ASTERISK", "WS", "COMMENT", "LINE_COMMENT", "InvalidCharacter" ]

    ruleNames = [ "IntNegLiteral", "IntPosLiteral", "FloatNegLiteral", "FloatPosLiteral", 
                  "HexLiteral", "BinaryLiteral", "StringLiteral", "BoolLiteral", 
                  "TimestampLiteral", "AND", "OR", "NOT", "FOLLOWEDBY", 
                  "LIKE", "MATCHES", "ISSUPERSET", "ISSUBSET", "LAST", "IN", 
                  "START", "STOP", "SECONDS", "TRUE", "FALSE", "WITHIN", 
                  "REPEATS", "TIMES", "IdentifierWithoutHyphen", "IdentifierWithHyphen", 
                  "EQ", "NEQ", "LT", "LE", "GT", "GE", "QUOTE", "COLON", 
                  "DOT", "COMMA", "RPAREN", "LPAREN", "RBRACK", "LBRACK", 
                  "PLUS", "HYPHEN", "MINUS", "POWER_OP", "DIVIDE", "ASTERISK", 
                  "HexDigit", "TwoHexDigits", "Base64Char", "WS", "COMMENT", 
                  "LINE_COMMENT", "InvalidCharacter" ]

    grammarFileName = "STIXPattern.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


